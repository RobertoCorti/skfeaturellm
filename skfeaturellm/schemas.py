"""
Pydantic models for data validation and serialization.
"""
from typing import Optional, Dict, Any

from pydantic import BaseModel, Field


class FeatureIdea(BaseModel):
    """
    Schema for a feature engineering idea generated by the LLM.
    
    Attributes:
        name: The name of the feature
        description: A description of what the feature represents and how it's computed
        transformation: A dictionary containing the transformation logic (to be implemented)
        feature_type: The type of feature (numerical, categorical, etc.)
        input_columns: List of input columns required for this feature
    """
    name: str = Field(..., description="Name of the generated feature")
    description: str = Field(..., description="Description of what the feature represents")
    transformation: Dict[str, Any] = Field(
        default_factory=dict,
        description="Dictionary containing the transformation logic"
    )
    feature_type: str = Field(..., description="Type of the feature (numerical, categorical, etc.)")
    input_columns: list[str] = Field(..., description="List of input columns required for this feature")
    complexity: Optional[int] = Field(
        default=1,
        description="Complexity score of the feature (1-5)",
        ge=1,
        le=5
    ) 